{"version":3,"file":"static/js/253.467d4992.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Container = styled.div`\npadding: 0 15px 0 15px;\n`\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n  width: 100%;\n  max-width: 360px;\n  background-color: #fff;\n  border-radius: 3px;\n  border: 1px solid grey;\n  overflow: hidden;\n`\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 88px;\n  height: 48px;\n  font-size: 18px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n  opacity: 1;\n}\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n  font: inherit;\n  font-size: 18px;\n}\n`;","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Container, Form, Button, Input } from 'components/SearchForm/SearchForm.styled';\n\n\nexport const SearchForm = ({onSubmit}) => {\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (searchQuery === '') {\n            alert('Заполните строку поиска');\n            return;\n        }\n        onSubmit(searchQuery);\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        setSearchQuery(e.target.value.toLowerCase());\n    };\n\n    return (<Container>\n        <Form onSubmit={handleSubmit}>\n             <Input\n            onChange={handleChange}\n            value={searchQuery}        \n            type=\"text\"\n            autocomplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            />\n            <Button type=\"submit\">Search</Button>\n        </Form>\n    </Container>)\n}\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\npadding: 0 15px 0 15px;\n`;\n\nexport const List = styled.ul`\n`;\n\nexport const Item = styled.li`\n&:not(:last-child){\n    margin-bottom: 5px;\n};\n`;","import { useState, useEffect } from 'react';\nimport { NavLink, useLocation, useSearchParams } from \"react-router-dom\";\nimport api from 'services/api';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { Container, List, Item } from 'pages/Movies/Movies.styled'\nimport styled from 'styled-components';\n\nconst Link = styled(NavLink)`\nfont-weight: normal;\nfont-size: 16px;\n`\n\nconst Movies = () => {\n    const [searchQuery, setSearchQuery] = useState(null);\n    const [movies, setMovies] = useState(null);\n    const location = useLocation();\n    let [searchParams, setSearchParams] = useSearchParams();\n\n    useEffect(() => {\n        async function fetchMovies(searchQuery) {\n            try {\n                const movies = await api.fetchMovies(searchQuery);\n                setMovies(movies.results);\n            } catch (error) {\n                console.log(error);\n            } finally {\n            };\n        };\n        setSearchQuery(searchParams.get('query'));\n        if (searchQuery !== null) {\n            fetchMovies(searchQuery);\n        }\n    }, [searchQuery, searchParams]);\n\n    const onSubmit = (searchQuery) => {\n        setSearchQuery(searchQuery.toString());\n        setSearchParams(`?query=${searchQuery}`);\n    };\n\n    return (<Container>\n        <SearchForm onSubmit={onSubmit} />\n        {movies ? <List>\n            {movies.map(({ id, title, name }) => {\n                return (<Item key={id}>\n                    <Link to={`${id}`} state={{ from: location }}>{title ? title : name}</Link>\n                </Item>)\n            })}\n        </List> : null}\n    </Container>\n    );\n};\n\nexport default Movies;","import axios from 'axios';\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"b3f9afca16a4955ec4fa9a455f1a40de\";\n\nconst fetchMoviesInTrend = async () => {\n    const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    const movies = response.data;\n    return movies;\n};\n\nconst fetchMoviesDetails = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    const movie = response.data;\n    return movie;\n};\n\nconst fetchMovieCredits = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    const credits = response.data;\n    return credits;\n};\n\nconst fetchMovieReviews = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    const reviews = response.data;\n    return reviews;\n};\n\nconst fetchMovies = async (searchQuery) => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`);\n    const movies = response.data;\n    return movies;\n};\n\n\nconst api = {\n    fetchMoviesInTrend,\n    fetchMoviesDetails,\n    fetchMovieCredits,\n    fetchMovieReviews,\n    fetchMovies\n};\n\nexport default api;\n "],"names":["Container","styled","Form","Button","Input","SearchForm","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","alert","onChange","target","value","toLowerCase","type","autocomplete","autoFocus","placeholder","List","Item","Link","NavLink","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","useEffect","api","results","console","log","get","fetchMovies","toString","map","id","title","name","to","state","from","axios","API_KEY","fetchMoviesInTrend","response","data","fetchMoviesDetails","movie","fetchMovieCredits","credits","fetchMovieReviews","reviews"],"sourceRoot":""}