{"version":3,"file":"static/js/33.d8240eea.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\ndisplay: block;\npadding: 0 15px 0 15px;\n`;\n\nexport const Box = styled.div`\ndisplay: flex;\nmargin-top: 15px;\npadding: 0 0 15px 0;\n`;\n\nexport const InfoBox = styled.div`\ndisplay: block;\nmargin-left: 30px;\n`;\n\nexport const AddBox = styled.div`\ndisplay: flex;\nflex-direction: column;\npadding: 0 0 15px 0;\n`;\n\nexport const Image = styled.img`\nwidth: 360px;\n`;\n\nexport const Title = styled.h2`\nmargin-block-start: 20px;\nmargin-block-end: 0px;\nmargin-inline-start: 0px;\nmargin-inline-end: 0px;\nfont-weight: bold;\nfont-size: 36px;\n`;","import { useState, useEffect } from 'react';\nimport { useParams, useLocation, Outlet, NavLink } from \"react-router-dom\";\nimport api from 'services/api';\nimport { Container, Box, InfoBox, AddBox, Image, Title } from \"pages/MovieDetails/MovieDetails.styled\";\nimport { Suspense } from \"react\";\nimport styled from 'styled-components';\n\nconst Link = styled(NavLink)`\ndisplay: block;\nmax-width: 70px;\nmargin-top: 20px;\ntext-decoration: none;\npadding: 5px 15px 5px 15px;\nfont-size: 18px;\ncolor: black;\nborder: 1px solid;\nborder-radius: 5px;\n&:hover {\n    color: white;\n    background-color: orange;\n};\n&:focus {\n    color: white;\n    background-color: orange;\n};\n`\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState({});\n    const params = useParams();\n    const imageUrl = \"https://image.tmdb.org/t/p/w500\";\n    const location = useLocation();\n    const goBack = location.state?.from ?? '/';\n\n    useEffect(() => {\n        async function fetchMoviesById(id) {\n            try {\n                const movie = await api.fetchMoviesDetails(id);\n                setMovie(movie);\n            } catch (error) {\n                console.log(error);\n            } finally {\n            };\n        };\n        fetchMoviesById(params.movieId)\n    }, [params.movieId])\n\n    return (<Container>\n        <Link to={goBack}>Go back</Link>\n        <Box>\n            {Object.keys(movie).length !== 0 ? <Image src={imageUrl + movie.poster_path} alt=''></Image> : null}\n            <InfoBox>\n                <Title>{movie.title}</Title>\n                <p>User Score: {Math.trunc(movie.vote_average * 10)}%</p>\n                <h3>Overview</h3>\n                <p>{movie.overview}</p>\n                <h3>Genres</h3>\n                <p>{Object.keys(movie).length !== 0 ? movie.genres.map(genre => { return genre.name; }).join(' ') : null}</p>\n            </InfoBox>\n        </Box>\n        <hr></hr>\n        <AddBox>\n            <h3>Additional information</h3>\n            <NavLink to=\"cast\" state={{ from: goBack }}>Cast</NavLink>\n            <NavLink to=\"reviews\" state={{ from: goBack }}>Reviews</NavLink>\n        </AddBox>\n        <hr></hr>\n        <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n        </Suspense>\n    </Container>);\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"b3f9afca16a4955ec4fa9a455f1a40de\";\n\nconst fetchMoviesInTrend = async () => {\n    const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    const movies = response.data;\n    return movies;\n};\n\nconst fetchMoviesDetails = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    const movie = response.data;\n    return movie;\n};\n\nconst fetchMovieCredits = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    const credits = response.data;\n    return credits;\n};\n\nconst fetchMovieReviews = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    const reviews = response.data;\n    return reviews;\n};\n\nconst fetchMovies = async (searchQuery) => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`);\n    const movies = response.data;\n    return movies;\n};\n\n\nconst api = {\n    fetchMoviesInTrend,\n    fetchMoviesDetails,\n    fetchMovieCredits,\n    fetchMovieReviews,\n    fetchMovies\n};\n\nexport default api;\n "],"names":["Container","styled","Box","InfoBox","AddBox","Image","Title","Link","NavLink","useState","movie","setMovie","params","useParams","goBack","useLocation","state","from","useEffect","id","api","console","log","fetchMoviesById","movieId","to","Object","keys","length","src","poster_path","alt","title","Math","trunc","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","axios","API_KEY","fetchMoviesInTrend","response","movies","data","fetchMoviesDetails","fetchMovieCredits","credits","fetchMovieReviews","reviews","fetchMovies","searchQuery"],"sourceRoot":""}